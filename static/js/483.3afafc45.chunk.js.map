{"version":3,"file":"static/js/483.3afafc45.chunk.js","mappings":"2NACA,EAA0B,uBAA1B,EAA6D,yBAA7D,EAAiG,wBAAjG,EAAoI,wB,SCuDpI,EAnDc,WACZ,IAAAA,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GACpCI,GAAOC,EAAAA,EAAAA,MAAPD,GAqBV,OAlBEE,EAAAA,EAAAA,YAAU,YCJY,SAACF,GACvB,IAAMG,EAAUC,EAAAA,EAAAA,IAAU,GAADC,OAHV,6BAIN,aAAAA,OAAYL,EAAE,oCAAAK,OANV,qCAWb,OADAC,QAAQC,IAAIJ,EAAU,KACfA,CACT,EDHIK,CAASR,GACVS,MAAK,SAAAC,GACJX,EAAoBW,EAAKC,KAAKC,MACtBN,QAAQC,IAAIG,EAAKC,KAAKC,KAAM,MAGrC,IACAC,OAAM,SAAAC,GACP,IAGDC,SAAQ,WACP,GAGF,GAAG,CAACf,KAOJgB,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAcF,SAC9BnB,EAAiBsB,KAAI,SAAAC,GAAA,IAAEC,EAASD,EAATC,UAAWtB,EAAEqB,EAAFrB,GAAIuB,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAI,OAElDR,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAaF,UAC5BQ,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAYF,SAAA,EACnCD,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAcO,IAAG,kCAAArB,OAAqCkB,GAAgBI,IAAI,UACnFH,GACCR,EAAAA,EAAAA,KAAA,QAAAC,SACCK,QALkCtB,EAQ/B,OAUZ,C","sources":["webpack://react-homework-template/./src/pages/Cast/actor.module.css?a96a","pages/Cast/Cast.jsx","helpers/fetchecr.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorWr\":\"actor_actorWr__oXq4Y\",\"listActor\":\"actor_listActor__HB0H3\",\"actorItm\":\"actor_actorItm__zdRk3\",\"actorImg\":\"actor_actorImg__rEUof\"};","import { useParams } from \"react-router-dom\";\nimport { fetchecr } from \"helpers/fetchecr\";\nimport { useEffect, useState } from \"react\";\nimport css from './actor.module.css'\n\n const Cast = () => {\n  const [responseMovsCast, setResponseMovsCast] = useState([]);\n  const  {id}  = useParams();\n\n  \n  useEffect(() => {\n    fetchecr(id)\n  .then(resp => {\n    setResponseMovsCast(resp.data.cast);\n            console.log(resp.data.cast, 77777);\n\n\n   })\n  .catch(error => {\n  // toast.warn(`🐒Отакої! ${error} 🐒`);\n})\n// лодер -\n.finally(() => {\n  // setLoading(false);\n}\n);\n}, [id]);\n\nreturn (\n\n\n\n\n<section>\n  <ul className={css.listActor}>\n{responseMovsCast.map(({character, id, profile_path, name}) => (\n\n       <li className={css.actorItm} key = {id}> \n       <div className={css.actorWr}> \n<img className={css.actorImg} src= {`https://image.tmdb.org/t/p/w200${profile_path}`} alt=\"actor\" />\n      {name}\n        <span>\n        {character}\n          </span>  \n       </div>\n       </li>\n))}\n        </ul>\n\n\n\n\n</section>\n)\n\n}\nexport default Cast","import axios from 'axios';\n\nconst MY_KEY = 'f56a897a3a6f379d289b4251d1cb1dbb';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const fetchecr = (id) => {\n  const response= axios.get(\n`${BASE_URL}/3/movie/${id}/credits?language=en-US&api_key=${MY_KEY}`\n// 'https://api.themoviedb.org/3/movie/343611?api_key=f56a897a3a6f379d289b4251d1cb1dbb'\n\n  );\n  console.log(response, 545); \n  return response\n};\n\n\n\n\n\n\n\n  \n\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","responseMovsCast","setResponseMovsCast","id","useParams","useEffect","response","axios","concat","console","log","fetchecr","then","resp","data","cast","catch","error","finally","_jsx","children","className","css","map","_ref","character","profile_path","name","_jsxs","src","alt"],"sourceRoot":""}