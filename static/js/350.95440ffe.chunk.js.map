{"version":3,"file":"static/js/350.95440ffe.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.jsx","components/UniversList/UniversList.jsx","pages/MovieDetails/MovieDetails.jsx","helpers/fetchedr.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// для повертання\nconst StyledLink = styled(Link)`\n  box-shadow: 1px 1px #53eaae, 2px 2px #53eac4, 3px 3px #53eaea;\n  background-color: #22ae8b;\n  color: #fff1eb;\n  outline: none;\n  border: none;\n  transition: all 0.1s ease-in;\n  padding: 5px 10px;\n  border-radius: 20px/60px;\n  margin-bottom: 10px;\n  width: 150px;\n\n  &:hover {\n    background-color: #88d122;\n    transform: rotate(-10deg);\n    color: #320960;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n\n// проптайпи\nBackLink.propTypes = {\n  children: PropTypes.node,\n  to: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\n// список за потреби\nexport const UniversList = ({ name, id }) => {\n  return (\n    <>\n      <li key={id} className=\"ganreListITM\">\n        {name}\n      </li>\n    </>\n  );\n};\n\n// проптайпи\nUniversList.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { fetchedr } from 'helpers/fetchedr';\nimport BarChart from 'components/Loader/Loader';\nimport { UniversList } from 'components/UniversList/UniversList';\n\nconst MovieDetails = () => {\n  const [responseMovsId, setResponseMovsId] = useState('');\n  let [loading, setLoading] = useState(false);\n  // для параметра\n  const { id } = useParams();\n\n  const {\n    original_title,\n    vote_average,\n    overview,\n    poster_path,\n    genres,\n    release_date,\n  } = responseMovsId;\n\n  // для поверення\n  const location = useLocation();\n  const back = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setLoading(true);\n    fetchedr(id)\n      .then(resp => {\n        // console.log(resp.data, 45);\n        setResponseMovsId(resp.data);\n      })\n      .catch(error => {\n        toast.warn(`🐒Sorry ${error} 🐒`);\n      })\n      // лодер -\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [id, poster_path]);\n\n  return (\n    <main className=\"contMD\">\n      {loading && <BarChart />}\n      <div className=\"wrapBtnImgMovDet\">\n        <BackLink className=\"btnBackHome\" to={back}>\n          Go back 🏄{' '}\n        </BackLink>\n      </div>\n      <div className=\"detalWrapp\">\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt=\"title of film\"\n        />\n        <div className=\"detalTxt\">\n          <h3>\n            {original_title}\n            <span>({release_date?.slice(0, 4)})</span>\n          </h3>\n          <p>User Score: {Math.ceil(vote_average * 10)}%</p>\n          <h4>Overview</h4>\n          <p>{overview} </p>\n        </div>\n        <div className=\"janrAddWrap\">\n          <h5>Genres 📼</h5>\n\n          <ul className=\"listGanreItem\">\n            {genres?.map(({ name, id }) => (\n              <UniversList name={name} key={id} />\n            ))}\n          </ul>\n          <p>Additional information ⤵️ ⚓ </p>\n        </div>\n      </div>\n      <ul className=\"navDet\">\n        <li className=\"castRewieItm\">\n          <Link className=\"castRewie\" to=\"cast\">\n            Cast 📮\n          </Link>\n        </li>\n\n        <li className=\"castRewieItm\">\n          <Link className=\"castRewie\" to=\"reviews\">\n            Reviews ✒️\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>🚧Loading...🚛</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst MY_KEY = 'f56a897a3a6f379d289b4251d1cb1dbb';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const fetchedr = id => {\n  const response = axios.get(\n    `${BASE_URL}/3/movie/${id}?language=en-US&api_key=${MY_KEY}`,\n    {}\n  );\n \n\n  return response;\n};\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","BackLink","_ref","to","children","_jsx","UniversList","name","id","_Fragment","className","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","responseMovsId","setResponseMovsId","_useState3","_useState4","loading","setLoading","useParams","original_title","vote_average","overview","poster_path","genres","release_date","back","useLocation","state","from","useEffect","axios","concat","fetchedr","then","resp","data","catch","error","toast","finally","_jsxs","BarChart","src","alt","slice","Math","ceil","map","Suspense","fallback","Outlet"],"sourceRoot":""}