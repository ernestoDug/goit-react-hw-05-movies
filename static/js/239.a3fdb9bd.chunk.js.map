{"version":3,"file":"static/js/239.a3fdb9bd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","helpers/fetchenr.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\",\"button\":\"Searchbar_button__nkcjk\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ setSearchMovies, updateQueryString, query }) => {\n  const [query2, setQuery] = useState('');\n\n  // змінник\n  const changer = event => setQuery(event.target.value);\n  query = query2;\n\n  // відпрвник\n  const submiter = event => {\n    event.preventDefault();\n    updateQueryString(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <header className={css.searchbar}>\n        <form onSubmit={submiter} className={css.form}>\n          <button type=\"submit\" className={css.button}>\n            <span className={css.buttonLab}> 🔎</span>\n          </button>\n\n          <input\n            className={css.input}\n            type=\"text\"\n            placeholder=\"Start your search...\"\n            value={query}\n            onChange={changer}\n          />\n        </form>\n      </header>\n    </>\n  );\n};\n\n// проптайпи\nSearchbar.propTypes = {\n  // updateQueryString: PropTypes.func.isRequired,\n  setSearchMovies: PropTypes.func.isRequired,\n  // query: PropTypes.string.isRequired,\n};\n\nexport default Searchbar;\n","import { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, Suspense, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { UsecustomCont } from 'components/Context/Context';\nimport BarChart from 'components/Loader/Loader';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MovieList from 'components/MoveList/MovieList';\nimport { fetchenr } from 'helpers/fetchenr';\nimport Searchbar from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const { responseMovsName, setResponseMovsName } = UsecustomCont();\n  const [searchMovies, setSearchMovies] = useSearchParams();\n  let [loading, setLoading] = useState(false);\n  // отримання параметра\n  const query = searchMovies.get('query') ?? '';\n\n  // або є або пусто для інпуту\n  const updateQueryString = query => {\n    const nextMovies = query !== '' ? { query } : '';\n    setSearchMovies(nextMovies);\n    // console.log(nextMovies, 78);\n  };\n\n  // для поверення\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setLoading(true);\n    fetchenr(query)\n      .then(resp => {\n        setResponseMovsName(resp.data.results);\n        // console.log(resp.data.results, 555);\n        // console.log(searchMovies, 556);\n      })\n      .catch(error => {\n        toast.warn(`🐒Sorry ${error} 🐒`);\n      })\n      // лодер -\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [query, searchMovies, setResponseMovsName]);\n\n  return (\n    <main>\n      {loading && <BarChart />}\n      <p>📺</p>\n      <Searchbar\n        updateQueryString={updateQueryString}\n        query={query}\n        setSearchMovies={setSearchMovies}\n      />\n      {searchMovies && (\n        <ul className=\"moviesList\">\n          {responseMovsName.map(({ original_title, id }) => (\n            <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n              <MovieList title={original_title} />\n            </Link>\n          ))}\n        </ul>\n      )}\n      <Suspense fallback={<div>🚧Loading...🚛</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst MY_KEY = 'f56a897a3a6f379d289b4251d1cb1dbb';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const fetchenr = search => {\n  const response = axios.get(\n    `${BASE_URL}/3/search/movie?query='${search}'&include_adult=false&language=en-US&page=1&api_\nkey=${MY_KEY}`,\n    {}\n  );\n  // console.log(response, \"***\");\n\n  return response;\n};\n"],"names":["_ref","setSearchMovies","updateQueryString","query","_useState","useState","_useState2","_slicedToArray","query2","setQuery","_jsx","_Fragment","children","className","css","_jsxs","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","_searchMovies$get","_UsecustomCont","UsecustomCont","responseMovsName","setResponseMovsName","_useSearchParams","useSearchParams","_useSearchParams2","searchMovies","loading","setLoading","get","location","useLocation","useEffect","search","axios","concat","then","resp","data","results","catch","error","toast","finally","BarChart","Searchbar","map","original_title","id","Link","to","state","from","MovieList","title","Suspense","fallback","Outlet"],"sourceRoot":""}