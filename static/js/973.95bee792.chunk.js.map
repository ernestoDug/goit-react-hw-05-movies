{"version":3,"file":"static/js/973.95bee792.chunk.js","mappings":"sPAEaA,EAAc,SAAHC,GAAiC,IAA3BC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QACxC,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAIN,GAAIA,EAAIO,UAAU,WAAUF,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,YAAWF,SAAA,CAAC,WAASJ,MACnCE,EAAAA,EAAAA,KAAA,KAAAE,SAAIH,QAIZ,ECVA,EAAwB,uB,SC4CxB,EApCgB,WACd,IAAAM,GAA8CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,GAA4BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEhBf,GAAOkB,EAAAA,EAAAA,MAAPlB,GAkBR,OAhBAmB,EAAAA,EAAAA,YAAU,WACRF,GAAW,GCVU,SAACjB,GAMxB,OALgBoB,EAAAA,EAAAA,IAAU,GAADC,OAHV,6BAIN,aAAAA,OAAYrB,EAAE,oCAAAqB,OANV,oCAWf,CDIIC,CAAUtB,GACPuB,MAAK,SAAAC,GACJX,EAAmBW,EAAKC,KAAKC,QAE/B,IACCC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,KAAW,qBAADR,OAAYO,EAAK,iBAC7B,IAECE,SAAQ,WACPb,GAAW,EACb,GACJ,GAAG,CAACjB,IAE8B,IAA3BY,EAAgBmB,QACrB5B,EAAAA,EAAAA,KAAA,KAAGI,UAAWyB,EAAU3B,SAAC,gDAEzBC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,CACGW,IAAWb,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,KACrB9B,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWF,SACtBO,EAAgBsB,KAAI,SAAAnC,GAAA,IAAGE,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASF,EAAED,EAAFC,GAAE,OACzCG,EAAAA,EAAAA,KAACL,EAAW,CAAUG,OAAQA,EAAQC,QAASA,EAASF,GAAIA,GAA1CA,EAAgD,QAK5E,C","sources":["components/RewievsList/RewievsList.jsx","webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","helpers/fetcherrw.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const RewievsList = ({ id, author, content }) => {\n  return (\n    <>\n      <li id={id} className=\"rewieItm\">\n        <h4 className=\"rewieName\">Author: {author}</h4>\n        <p>{content}</p>\n      </li>\n    </>\n  );\n};\n\n// проптайпи\nRewievsList.propTypes = {\n  id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sorry\":\"Reviews_sorry__5Fknn\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport BarChart from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RewievsList } from 'components/RewievsList/RewievsList';\nimport css from 'pages/Reviews/Reviews.module.css';\nimport { fetcherrw } from 'helpers/fetcherrw';\n\nconst Reviews = () => {\n  const [responseMovsRew, setResponseMovsRew] = useState([]);\n  let [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    fetcherrw(id)\n      .then(resp => {\n        setResponseMovsRew(resp.data.results);\n        // console.log(resp.data.results, 77777);\n      })\n      .catch(error => {\n        toast.warn(`🐒Sorry ${error} 🐒`);\n      })\n      // лодер -\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [id]);\n\n  return responseMovsRew.length === 0 ? (\n    <p className={css.sorry}>Sorry, there are no reviews for this movie</p>\n  ) : (\n    <section>\n      {loading && <BarChart />}\n      <ul className=\"rewieList\">\n        {responseMovsRew.map(({ author, content, id }) => (\n          <RewievsList key={id} author={author} content={content} id={id} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst MY_KEY = 'f56a897a3a6f379d289b4251d1cb1dbb';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const fetcherrw = (id) => {\n  const response= axios.get(\n`${BASE_URL}/3/movie/${id}/reviews?language=en-US&api_key=${MY_KEY}`\n\n  );\n  // console.log(response, '54hg5'); \n  return response\n};\n\n\n\n\n\n\n\n  \n\n\n"],"names":["RewievsList","_ref","id","author","content","_jsx","_Fragment","children","_jsxs","className","_useState","useState","_useState2","_slicedToArray","responseMovsRew","setResponseMovsRew","_useState3","_useState4","loading","setLoading","useParams","useEffect","axios","concat","fetcherrw","then","resp","data","results","catch","error","toast","finally","length","css","BarChart","map"],"sourceRoot":""}