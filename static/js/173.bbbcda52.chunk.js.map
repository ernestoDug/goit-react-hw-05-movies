{"version":3,"file":"static/js/173.bbbcda52.chunk.js","mappings":"sPACA,EAA0B,0BAA1B,EAA+D,2BAA/D,EAAqG,2B,SC0BrG,EAxBiB,SAAHA,GAA+C,IAAzCC,EAASD,EAATC,UAAWC,EAAEF,EAAFE,GAAIC,EAAYH,EAAZG,aAAcC,EAAIJ,EAAJI,KAC/C,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,UAC1BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXG,IAAG,kCAAAC,OAAoCR,GACvCS,IAAI,UAELR,GACDC,EAAAA,EAAAA,KAAA,QAAAG,SAAOP,QARuBC,EAYtC,EChBA,EAA4B,wBCiD5B,EAxCa,WACX,IAAAW,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAC5CI,GAA4BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEhBlB,GAAOqB,EAAAA,EAAAA,MAAPrB,GAkBR,OAhBAsB,EAAAA,EAAAA,YAAU,WACRF,GAAW,GCXS,SAACpB,GAKvB,OAJgBuB,EAAAA,EAAAA,IAAU,GAADd,OAHV,6BAIN,aAAAA,OAAYT,EAAE,oCAAAS,OANV,oCAUf,CDMIe,CAASxB,GACNyB,MAAK,SAAAC,GACJV,EAAoBU,EAAKC,KAAKC,KAEhC,IACCC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,KAAW,qBAADtB,OAAYqB,EAAK,iBAC7B,IAECE,SAAQ,WACPZ,GAAW,EACb,GACJ,GAAG,CAACpB,KAGFO,EAAAA,EAAAA,MAAA,WAAAD,SAAA,CACGa,IAAWhB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,KAErB9B,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcC,SAC1BS,EAAiBmB,KAAI,SAAApC,GAAA,IAAGC,EAASD,EAATC,UAAWC,EAAEF,EAAFE,GAAIC,EAAYH,EAAZG,aAAcC,EAAIJ,EAAJI,KAAI,OACxDC,EAAAA,EAAAA,KAACgC,EAAQ,CAEPpC,UAAWA,EACXC,GAAIA,EACJC,aAAcA,EACdC,KAAMA,GAJDF,EAKL,QAKZ,C","sources":["webpack://react-homework-template/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","helpers/fetchecr.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorWr\":\"CastList_actorWr__pyNG5\",\"actorItm\":\"CastList_actorItm__OFldj\",\"actorImg\":\"CastList_actorImg__rlXCm\"};","import PropTypes from 'prop-types';\nimport css from 'components/CastList/CastList.module.css';\n\nconst CastList = ({ character, id, profile_path, name }) => {\n  return (\n    <li className={css.actorItm} key={id}>\n      <div className={css.actorWr}>\n        <img\n          className={css.actorImg}\n          src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n          alt=\"actor\"\n        />\n        {name}\n        <span>{character}</span>\n      </div>\n    </li>\n  );\n};\n\n// протайпи\nCastList.propTypes = {\n  character: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n};\n\nexport default CastList;\n","// extracted by mini-css-extract-plugin\nexport default {\"listActor\":\"Cast_listActor__bmFoH\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BarChart from 'components/Loader/Loader';\nimport { fetchecr } from 'helpers/fetchecr';\nimport CastList from 'components/CastList/CastList';\nimport css from './Cast.module.css';\n\n// актори\nconst Cast = () => {\n  const [responseMovsCast, setResponseMovsCast] = useState([]);\n  let [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchecr(id)\n      .then(resp => {\n        setResponseMovsCast(resp.data.cast);\n        // console.log(resp.data.cast, 77777);\n      })\n      .catch(error => {\n        toast.warn(`🐒Sorry ${error} 🐒`);\n      })\n      // лодер -\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [id]);\n\n  return (\n    <section>\n      {loading && <BarChart />}\n\n      <ul className={css.listActor}>\n        {responseMovsCast.map(({ character, id, profile_path, name }) => (\n          <CastList\n            key={id}\n            character={character}\n            id={id}\n            profile_path={profile_path}\n            name={name}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst MY_KEY = 'f56a897a3a6f379d289b4251d1cb1dbb';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const fetchecr = (id) => {\n  const response= axios.get(\n`${BASE_URL}/3/movie/${id}/credits?language=en-US&api_key=${MY_KEY}`\n  );\n  // console.log(response, 545); \n  return response\n};\n\n\n\n\n\n\n\n  \n\n\n"],"names":["_ref","character","id","profile_path","name","_jsx","className","css","children","_jsxs","src","concat","alt","_useState","useState","_useState2","_slicedToArray","responseMovsCast","setResponseMovsCast","_useState3","_useState4","loading","setLoading","useParams","useEffect","axios","fetchecr","then","resp","data","cast","catch","error","toast","finally","BarChart","map","CastList"],"sourceRoot":""}